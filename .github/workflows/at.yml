name: Visit URLs

on:
  schedule:
    - cron: '0 */7 * * 1-5' # 工作日 上午8:00 - 下午5:59
    - cron: '5 18-23/5 * * 1-5' # 工作日 晚上6点 - 次日凌晨5:59
    - cron: '6 */10 * * 3' # 工作日 次日凌晨6:00 - 上午7:59
    - cron: '30 */5 * * 4' # 工作日 上午8:00 - 次日凌晨5:00
    - cron: '2 */3 * * 5'   # 星期五 晚上10:00 - 次日凌晨5:00
    - cron: '15 */24 * * 0,6'     # 休息日 全天候
  workflow_dispatch:

jobs:
  visit-urls:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y curl

      - name: Visit URLs
        run: |
          set -e
          urls=($(cat urls))

          for url in "${urls[@]}"; do
            delay=$((RANDOM % 120 + 120))
            count=0
            while true; do
              response=$(timeout 5s curl -sf -o /dev/null -w '%{http_code}' "$url" || true)
              if [[ "$response" =~ ^2 ]]; then
                echo "$url: Success"
                break
              elif [ -z "$response" ]; then
                echo "$url: Failed (no response)"
              else
                echo "$url: Failed ($response)"
              fi

              # 如果网站未响应，则等待5秒后重新尝试
              sleep 5
              ((count++))
              if [ $count -ge 3 ]; then
                echo "$url: Failed (exceeded retries)"
                break
              fi
            done

            sleep "$delay"
          done || true

      - name: Check URLs and Update README
        run: |
          urls=($(cat urls))

          declare -a responses=()
          for url in "${urls[@]}"; do
            response=$(timeout 5s curl -sf -o /dev/null -w '%{http_code}' "$url" || true)
            if [[ "$response" =~ ^2 ]]; then
              responses+=("$url: Success")
            elif [ -z "$response" ]; then
              responses+=("$url: Failed (no response)")
              echo "URL ${url} failed to visit (no response)" >> README.md
            else
              responses+=("$url: Failed ($response)")
              echo "URL ${url} failed to visit ($response)" >> README.md
            fi
          done

          echo "## Website Status" > status.md
          printf '%s\n' "${responses[@]}" >> status.md
          cat README.md | sed '/## Website Status/,$d' > new-readme.md
          cat status.md >> new-readme.md
          mv new-readme.md README.md

          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git add README.md
          git commit -m "Update website status"
          git push origin ${{ github.ref }}
