name: simulate browsing

on:
  schedule:
    - cron: '* */23 * * *'  # 每 23 小时运行一次
  workflow_dispatch:  # 允许手动触发

jobs:
  simulate_browsing:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Cache Chrome and ChromeDriver
      id: cache-chrome
      uses: actions/cache@v4
      with:
        path: |
          /usr/bin/google-chrome
          /usr/local/bin/chromedriver
        key: ${{ runner.os }}-chrome-${{ hashFiles('google-chrome-stable_current_amd64.deb') }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install selenium requests jinja2

    - name: Download and install Chrome (if not cached)
      if: steps.cache-chrome.outputs.cache-hit != 'true'
      run: |
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb -O chrome.deb
        sudo dpkg -i chrome.deb || sudo apt-get -f install -y
        rm chrome.deb

    - name: Install ChromeDriver (matching installed Chrome)
      if: steps.cache-chrome.outputs.cache-hit != 'true'
      run: |
        CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d '.' -f 1)
        DRIVER_VERSION=$(curl -sS "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")
        wget "https://chromedriver.storage.googleapis.com/$DRIVER_VERSION/chromedriver_linux64.zip"
        unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        rm chromedriver_linux64.zip

    - name: Delay random minutes
      run: |
        delay=$((RANDOM % 5 + 1))  # 随机等待 1-5 分钟
        echo "Sleeping for $delay minutes..."
        sleep "${delay}m"

    - name: Run scripts
      run: |
        python ./tools/script.py urls
        python ./tools/bludweb.py webs 150
        python ./tools/remove_duplicates.py urls
        python ./tools/fetch_urls.py urls

    - name: Execute auto_login_and_execute.sh script
      run: |
        chmod +x ./tools/auto_login_and_execute.sh
        ./tools/auto_login_and_execute.sh

    - name: Cut web
      run: |
        chmod +x ./tools/cut.sh
        ./tools/cut.sh

    - name: Run simulate_browsing script
      env:
        FILENAME: 'urls'
      run: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        python ./tools/simulate_browsing.py $FILENAME

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Ensure .gitignore exists and ignores large files
      run: |
        echo "google-chrome-stable_current_amd64.deb" >> .gitignore
        echo "chromedriver_linux64.zip" >> .gitignore
        echo "*.deb" >> .gitignore
        echo "*.zip" >> .gitignore

    - name: Commit and push changes
      continue-on-error: true
      run: |
        # 获取当前分支名称
        BRANCH=$(git rev-parse --abbrev-ref HEAD)
        echo "Current branch is: $BRANCH"

        # 确保所有变更文件被跟踪
        git add -A
        
        # 检查是否有更改
        if git diff --cached --quiet; then
          echo "No changes to commit."
        else
          git commit -m "Update README.md and webs directory"
          git pull origin "$BRANCH" --rebase
          git push origin "$BRANCH"
        fi
      shell: /usr/bin/bash -e {0}

    - name: Clean up large files
      run: |
        find . -size +50M -delete
