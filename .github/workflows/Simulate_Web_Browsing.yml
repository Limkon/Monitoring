name: simulate browsing

on:
  schedule:
    - cron: '* */23 * * *'
  workflow_dispatch:

jobs:
  simulate_browsing:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Cache Chrome and ChromeDriver
      id: cache-chrome
      uses: actions/cache@v4
      with:
        path: |
          google-chrome-stable_current_amd64.deb
          chromedriver_linux64.zip
          /usr/local/bin/chromedriver
        key: ${{ runner.os }}-chrome-cache-${{ hashFiles('google-chrome-stable_current_amd64.deb') }}-${{ hashFiles('chromedriver_linux64.zip') }}-${{ hashFiles('/usr/local/bin/chromedriver') }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install selenium requests jinja2

    - name: Download and install Chrome
      if: steps.cache-chrome.outputs.cache-hit != 'true'
      run: |
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo dpkg -i google-chrome-stable_current_amd64.deb
        sudo apt-get -f install -y

    - name: Install ChromeDriver
      if: steps.cache-chrome.outputs.cache-hit != 'true'
      run: |
        wget https://chromedriver.storage.googleapis.com/$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip
        unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver

    - name: Delay random minutes
      run: |
        delay=$((RANDOM %1 + 1))
        echo "Sleeping for $delay minutes..."
        sleep "${delay}m"

    - name: Run scripts
      run: |
        python ./tools/script.py urls
        python ./tools/bludweb.py webs 150
        python ./tools/remove_duplicates.py urls
        python ./tools/fetch_urls.py urls

    - name: Execute auto_login_and_execute.sh script
      run: |
        chmod +x ./tools/auto_login_and_execute.sh
        ./tools/auto_login_and_execute.sh

    - name: Cut web
      run: |
        chmod +x ./tools/cut.sh
        ./tools/cut.sh

    - name: Run simulate_browsing script
      env:
        FILENAME: 'urls'
      run: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        python ./tools/simulate_browsing.py $FILENAME

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Commit and push changes
      continue-on-error: true
      run: |
        git add .
        git diff-index --quiet HEAD || git commit -m "Update failed URLs" -q
        git pull origin HEAD --rebase
        git push origin HEAD

    - name: Clean up large files
      run: |
        find . -size +50M -delete
