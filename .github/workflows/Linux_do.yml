name: LinuxDo Automation

on:
  # 定时调度：每 7 天运行一次（已注释）
  # schedule:
  #   - cron: "0 0 */7 * *"  # 每 7 天的午夜 00:00 UTC 运行
  # 手动触发
  workflow_dispatch:

jobs:
  run-linux-do:
    runs-on: ubuntu-latest

    steps:
    # 1. 检出代码
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. 设置 Python 环境
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'  # 明确指定 Python 3.10

    # 3. 安装依赖
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install jinja2  # 安装 jinja2

    # 4. 运行脚本
    - name: Run bludweb.py script
      run: python tools/bludweb.py webs 10

    # 5. 检查生成的文件（调试用）
    - name: List generated files
      run: |
        ls -la webs || echo "webs directory not found or empty"
        cat webs/* || echo "No files to display in webs directory"

    # 6. 提交并推送更改
    - name: Commit and push changes
      run: |
        # 配置 Git 用户信息（必要，否则推送会失败）
        git config --global user.name "GitHub Action"
        git config --global user.email "action@github.com"

        # 获取当前分支名称
        BRANCH=$(git rev-parse --abbrev-ref HEAD)
        echo "Current branch is: $BRANCH"

        # 添加所有更改（包括 webs 目录）
        git add webs README.md || echo "Nothing to add"

        # 检查是否有更改需要提交
        if git diff-index --quiet HEAD; then
          echo "No changes to commit"
        else
          git commit -m "Update webs directory and README.md [ci skip]" -q
          git pull origin "$BRANCH" --rebase
          git push origin "$BRANCH"
          echo "Changes committed and pushed successfully"
        fi
      shell: bash
