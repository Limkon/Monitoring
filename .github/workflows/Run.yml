name: Visit URLs

on:
  schedule:
    - cron: '*/15 8-18 * * 1-5'
    - cron: '*/30 19-23 * * 1-5'
    - cron: '*/25 0-7 * * 1-5'
    - cron: '*/33 * * * *'
    - cron: '*/30 9-16 * * 0,6'
    - cron: '*/50 17-23 * * 0,6'
    - cron: '*/30 0-8 * * 0,6'
    
  workflow_dispatch:

jobs:
  visit_urls:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Remove duplicate URLs
        run: python ./tools/remove_duplicates.py ${{ github.workspace }}/urls
        
      - name: Install Chrome browser and ChromeDriver
        run: |
         apt-get update
         apt-get install -y google-chrome-stable
         LATEST_CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
         curl -L -o /tmp/chromedriver.zip https://chromedriver.storage.googleapis.com/$LATEST_CHROMEDRIVER_VERSION/chromedriver_linux64.zip
         unzip /tmp/chromedriver.zip -d /usr/local/bin
         chmod +x /usr/local/bin/chromedriver
   
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium

      - name: Delay random minutes
        run: |
          delay=$((RANDOM % 9 + 1))
          sleep "$delay"
          
      - name: Check and create 'urls' file
        run: |
          if [ ! -f "urls" ]; then
             touch urls
          fi

      - name: Visit URLs
        run: |
          set -e
          urls=($(cat urls | shuf))
          declare -a responses=()
          declare -a failed_urls=()
          for url in "${urls[@]}"; do

            # 执行原始的 curl 请求，并处理响应
            response=$(timeout 5s curl -sf -o /dev/null -w '%{http_code}\n' "$url" || echo "Failed")
            if [[ "$response" =~ ^[23] ]]; then
              echo "$url: 成功"
              responses+=("$url: 成功")
            else
              echo "$url: 失败 ($response)"
              responses+=("$url: 失败 ($response)")
              failed_urls+=("$url: 失败 ($response)")
            fi
            echo ""
          done

          # Push failed URLs to README.md
          echo "# 失败网址" > README.md
          for failed_url in "${failed_urls[@]}"; do
            echo "- $failed_url" >> README.md
          done
          
      - name: Simulate interaction URLs
        run: python ./tools/simulate_interaction.py ${{ github.workspace }}/urls

      - name: Commit and push changes
        continue-on-error: true
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Update failed URLs" -q
          git push
