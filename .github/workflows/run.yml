name: Visit URLs

on:
  schedule:
    - cron: '15 13-23/1 * * *' 
    - cron: '35 0-12/1 * * *' 
  workflow_dispatch:

jobs:
  delayed-job-trigger:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      #- name: Delay random minutes
      #  run: |
      #    delay=$((RANDOM % 5 + 1))
      #    sleep "$delay"
         
      - name: Visit URLs
        run: |
          set -e
          urls=($(cat urls))

          for url in "${urls[@]}"; do
            count=0
            while true; do
                response=$(timeout 5s curl -sf -o /dev/null -w '%{http_code}' "$url" || true)
                if [[ "$response" =~ ^2 ]]; then
                    echo "$url: Success"
                    break
                elif [ -z "$response" ]; then
                    echo "$url: Failed (no response)"
                else
                    echo "$url: Failed ($response)"
                fi

                # 如果网站未响应，则等待5秒后重新尝试
                sleep 5
                ((count++))
                if [ $count -ge 1 ]; then
                    echo "$url: Failed (exceeded retries)"
                    break
                fi
            done
          done || true

      - name: Check URLs and Update README
        continue-on-error: true
        run: |
          urls=($(cat urls))

          declare -a responses=()
          for url in "${urls[@]}"; do
              response=$(timeout 5s curl -sf -o /dev/null -w '%{http_code}' "$url" || true)
              if [[ "$response" =~ ^2 ]]; then
                  responses+=("$url: Success")
              elif [ -z "$response" ]; then
                  responses+=("$url: Failed (no response)")
                  echo "URL ${url} failed to visit (no response)" >> README.md
              else
                  responses+=("$url: Failed ($response)")
                  echo "URL ${url} failed to visit ($response)" >> README.md
              fi
          done

          echo "## Website Status" > status.md
          printf '%s\n' "${responses[@]}" >> status.md

          # 使用 diff 命令比较新的结果和现有的 README.md 文件中的内容
          if ! diff -q README.md status.md >/dev/null ; then
              cat status.md > README.md

              git config --global user.name "${{ github.actor }}"
              git config --global user.email "${{ github.actor }}@users.noreply.github.com"
              git add README.md
              git commit -m "Update website status"
              git push origin ${{ github.ref }}
          else
              echo "No changes detected. Skipping commit."
          fi
